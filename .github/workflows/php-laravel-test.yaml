name: Laravel PHPUnit Tests

on:
  workflow_call:
    inputs:
      php_version:
        required: false
        type: string
        default: "8.3"
      php_extensions:
        description: "Don't forget to add the default list if needed"
        required: false
        type: string
        default: "dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_mysql, pdo_pgsql, gd, redis-phpredis/phpredis@5.3.7"
      test_command:
        type: string
        required: false
        default: "composer test"
      coverage_path:
        description: "The artifact path for coverage reports"
        type: string
        required: false
        default: ".coverage"
      coverage_artifact:
        description: "The artifact name for coverage reports"
        type: string
        required: false
        default: "code-coverage-report"
      docker_command:
        type: string
        required: false
        default: ""
    secrets:
      packagist_username:
        required: true
      packagist_password:
        required: true

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    name: PHPUnit
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres_test
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php_version }}
          tools: composer, phpunit
          coverage: pcov
          extensions: ${{ inputs.php_extensions }}

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install composer dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: "--optimize-autoloader --prefer-dist"
        env:
          COMPOSER_AUTH: |
            {
              "http-basic": {
                "repo.packagist.com": {
                  "username": "${{ secrets.packagist_username }}",
                  "password": "${{ secrets.packagist_password }}"
                }
              }
            }
      
      - name: Run Docker Command
        if: ${{ inputs.docker_command != '' }}
        run: ${{ inputs.docker_command }}
      - name: Execute tests
        run: ${{ inputs.test_command }}
        env:
          DB_CONNECTION: pgsql
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: postgres

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.coverage_artifact }}
          path: ${{ inputs.coverage_path }}
          include-hidden-files: true