name: PHP CLI Build and Push Image

on:
  workflow_call:
    inputs:
      php_version:
        required: false
        type: string
        default: "8.3"
      php_extensions:
        description: "Don't forget to add the default list if needed"
        required: false
        type: string
        default: "intl"
      dockerfile_path:
        description: "Path to the application dockerfile you want to build"
        required: false
        type: string
        default: "./build/Dockerfile"
      new_tag:
        type: string
        required: true
    secrets:
      packagist_username:
        required: true
      packagist_password:
        required: true
      gh_token:
        required: true

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    name: Build + Push Image
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php_version }}
          tools: composer
          coverage: none
          extensions: ${{ inputs.php_extensions }}
        env:
          COMPOSER_AUTH_JSON: |
            {
              "http-basic": {
                "repo.packagist.com": {
                  "username": "${{ secrets.packagist_username }}",
                  "password": "${{ secrets.packagist_password }}"
                }
              }
            }
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install dependencies
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer install --no-dev --prefer-dist --no-interaction --no-progress --optimize-autoloader
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.gh_token }}
      - name: Docker Build and Push
        uses: docker/build-push-action@v5
        env:
          REGISTRY: ghcr.io
          IMAGE_NAME: ${{ github.repository }}
        with:
          context: .
          push: true
          target: app
          file: ${{ inputs.dockerfile_path }}
          platforms: linux/amd64
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.new_tag }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            BUILD_VERSION=${{ inputs.new_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
