name: Go Test
on:
  workflow_call:
    secrets:
      token:
        required: true

jobs:
  go-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
          check-latest: true
      - name: Go mod cache
        id: go-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            vendor
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.*') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Go mod vendor
        if: steps.go-cache.outputs.cache-hit != 'true'
        env:
          GOPRIVATE: "github.com/encodium"
        run: |
          echo "machine github.com login rp-build-user password ${{ secrets.token }}" > ~/.netrc
          go mod vendor
      - name: Install dependencies
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          go install github.com/golang/mock/mockgen@v1.6.0
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: 1.55.2
          skip-go-installation: true
          args: --print-issued-lines=true -c ./.golangci.yml --max-same-issues 0 -v --timeout 5m
      - name: Go Generate
        run: go generate ./... && git diff --exit-code
      - name: Go Test
        run: |
          go test ./... -mod=vendor -cover -coverprofile coverage.out -coverpkg ./...
          GOFLAGS=-mod=vendor go tool cover -func=coverage.out
      - name: Go Vulnerabilities
        run: govulncheck -test ./...
