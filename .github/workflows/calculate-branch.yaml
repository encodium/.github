name: Calculate Branch
on:
  workflow_call:
    inputs:
      branch:
        description: The branch name
        required: true
        type: string
      owner:
        description: The GitHub owner of the repository
        required: false
        type: string
        default: encodium
      repo:
        description: The GitHub repository name
        required: true
        type: string
    outputs:
      branch:
        description: "The calculated branch"
        value: ${{ jobs.calculate-branch.outputs.branch }}
      found:
        description: "Set to true if the branch was found"
        value: ${{ jobs.calculate-branch.outputs.found }}
      sha:
        description: "The branch SHA hash"
        value: ${{ jobs.calculate-branch.outputs.sha }}
      sha_short:
        description: "The short SHA hash"
        value: ${{ jobs.calculate-branch.outputs.sha_short }}
    secrets:
      github_api_token:
        required: true

jobs:
  calculate-branch:
    name: Calculate Branch
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.calculate_branch.outputs.branch }}
      found: ${{ steps.calculate_branch.outputs.found }}
      sha: ${{ steps.calculate_branch.outputs.sha }}
      sha_short: ${{ steps.calculate_branch.outputs.sha_short }}
    steps:
      - name: Calculate Branch
        id: calculate_branch
        env:
          GH_TOKEN: ${{ secrets.github_api_token }}
        run: |
          requested_branch="${{ inputs.branch }}"
          owner="${{ inputs.owner }}"
          repo="${{ inputs.repo }}"

          echo "Checking to see if the branch \"${requested_branch}\" exists in this project."
          branch_info=$(gh api "/repos/${owner}/${repo}/branches/${requested_branch}" --jq '{name: .name, sha: .commit.sha}' || echo '{}')
          branch_name_candidate=$(echo "${branch_info}" | jq -r '.name')

          if [[ "${branch_name_candidate}" == "${requested_branch}" ]];
          then
            echo "Branch \"${branch_name_candidate}\" found."
            branch_name="${branch_name_candidate}"
            sha=$(echo "${branch_info}" | jq -r '.sha')
            sha_short=$(echo "${branch_info}" | jq -r '.sha[:7]')
            found=true
          else
            branch_name=""
            sha=""
            sha_short=""
            found=""
          fi

          echo "Branch name: ${branch_name}"
          echo "SHA: ${sha}"
          echo "SHA (short): ${sha_short}"
          echo "Found: ${found}"

          echo "branch=${branch_name}" >> "$GITHUB_OUTPUT"
          echo "found=${found}" >> "$GITHUB_OUTPUT"
          echo "sha=${sha}" >> "$GITHUB_OUTPUT"
          echo "sha_short=${sha_short}" >> "$GITHUB_OUTPUT"
